<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tgr</groupId>
	<artifactId>tgr_admin</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging><!-- 打成 mvn packagejar包发布 mvn package     java -jar tgr_admin-1.0.jar 启动应用-->
	<!-- <packaging>war</packaging> --> <!-- 放在tomcat webapp路径中 启动tomcat运行-->

	<name>tgr_admin</name>
	<description>tgredAdmin</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-redis</artifactId>
			<version>1.4.7.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		
		<!-- web 这里已经导入了整个springframework以及autoconfigure,logging,slf4,
			 jackson,tomcat
	                插件等
	    -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-loader</artifactId>
		</dependency>
		
		<!-- swagger2 -->
		<dependency>
   			<groupId>io.springfox</groupId>
   			<artifactId>springfox-swagger2</artifactId>
   			<!-- <version>2.7.0</version> -->
   			<version>2.9.2</version>
		</dependency>
		<dependency>
   			<groupId>io.springfox</groupId>
   			<artifactId>springfox-swagger-ui</artifactId>
   			<!-- <version>2.7.0</version> -->
   			<version>2.8.0</version>
		</dependency>
		<!-- Failed to start bean 'documentationPluginsBootstrapper'; 
		nested exception is com.google.common.util.concurrent.ExecutionError: java.lang.StackOverflowError -->
		<dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>25.1-jre</version>
        </dependency>
		
		<!-- thymeleaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		
		<!-- 定时器 -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency><!-- 该依赖必加，里面有sping对schedule的支持 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		
		<!-- jpa -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<!-- querydsl -->
		<dependency>
    		<groupId>com.querydsl</groupId>
    		<artifactId>querydsl-jpa</artifactId>
    		<version>${querydsl.version}</version>
  		</dependency>
  		<dependency>
    		<groupId>com.querydsl</groupId>
    		<artifactId>querydsl-apt</artifactId>
    		<version>${querydsl.version}</version>
    		<scope>provided</scope>
  		</dependency>
		<!-- querydsl -->
		
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<!-- 公共编码 -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
	
		<!-- io 文件操作等 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.3</version>
		</dependency>
		
		<dependency>
   			<groupId>commons-fileupload</groupId>
   			<artifactId>commons-fileupload</artifactId>
   			<version>1.3.3</version>
		</dependency>
		
		<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.9</version>
        </dependency>
        
        <dependency>
        	<groupId>net.sf.json-lib</groupId>
        	<artifactId>json-lib</artifactId>
        	<version>2.4</version>
        	<classifier>jdk15</classifier>
   		</dependency>
        
        <dependency>
    		<groupId>org.apache.commons</groupId>
    		<artifactId>commons-lang3</artifactId>
    		<version>3.4</version>
 		</dependency>

        <dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		 <dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations
			</artifactId>
		</dependency>
		
		<!-- mongodb 文档型数据库 文档建模-->
		<dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-mongodb</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.pegdown</groupId>
        	<artifactId>pegdown</artifactId>
        	<version>1.4.1</version>
        </dependency>
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        
        <!--   二维码 -->
        <dependency>
   			 <groupId>com.google.zxing</groupId>
   			 <artifactId>core</artifactId>
    		 <version>3.1.0</version>
 	    </dependency>
 	    
 	    <!-- poi -->
 	    <dependency>
         	<groupId>org.apache.poi</groupId>
         	<artifactId>poi</artifactId>
         	<version>3.10-FINAL</version>
     	</dependency>
     	
     	<dependency>
         	<groupId>org.apache.poi</groupId>
         	<artifactId>poi-ooxml</artifactId>
         	<version>3.10-FINAL</version>
        </dependency>
        
       <!--  zip -->
        <dependency>
  			<groupId>org.apache.ant</groupId>
  			<artifactId>ant</artifactId>
  			<version>1.9.1</version>
		</dependency>
		
		<!-- pdf -->
		<dependency>
     		<groupId>com.itextpdf</groupId>
     		<artifactId>itextpdf</artifactId>
     		<version>5.5.10</version>
		</dependency>
		<!-- pdf 中文-->
		 <dependency>
     		<groupId>com.itextpdf</groupId>
     		<artifactId>itext-asian</artifactId>
     		<version>5.2.0</version>
 		</dependency>
 		<!-- pdf文件密码 -->
 		<dependency>
     		<groupId>org.bouncycastle</groupId>
    		 <artifactId>bcprov-jdk15on</artifactId>
     		<version>1.54</version>
		</dependency>
		
		<!--jxl 导入导出excwl-->
	    <dependency>
	        <groupId>net.sourceforge.jexcelapi</groupId>
	        <artifactId>jxl</artifactId>
	        <version>2.6.12</version>
	    </dependency>
	    
	    <!-- iText生成pdf表格 -->
	    <!-- <dependency>
		    <groupId>com.lowagie</groupId>
		    <artifactId>iText</artifactId>
		    <version>2.1.5</version>
		</dependency>   -->     
		<!--itext生成word文档，需要下面dependency-->
		<!-- <dependency>
		    <groupId>com.lowagie</groupId>
		    <artifactId>iText-rtf</artifactId>
		    <version>2.1.4</version>
		</dependency>   
		<dependency>
		    <groupId>com.lowagie</groupId>
		    <artifactId>iTextAsian</artifactId>
		    <version>2.1.4</version>
		</dependency> -->
		
		<!-- ali开源项目 支持所有jdbc兼容 
		可以实时观察数据库连接池和sql查询工作情况 一定情况上可以提高数据库访问性能 -->
		<dependency>
        	<groupId>com.alibaba</groupId>
        	<artifactId>druid</artifactId>
        	<!-- <version>1.0.18 1.0.11 1.1.8</version> -->
        	<!-- <version>1.0.11</version> -->
        	<!-- <version>1.1.12</version> -->
        	<version>1.1.5</version>
    	</dependency>
    	
    	<!-- 安全策略  开始 -->
    	<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<!-- <version>4.1.0.RELEASE</version> -->
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<!-- <version>4.1.0.RELEASE</version> -->
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		
		<dependency>
    		<groupId>org.springframework.social</groupId>
    		<artifactId>spring-social-core</artifactId>
    		<version>1.1.6.RELEASE</version>
		</dependency>
		
		<dependency>
    		<groupId>org.springframework.social</groupId>
    		<artifactId>spring-social-facebook</artifactId>
    		<version>2.0.3.RELEASE</version>
		</dependency>
		
		<!-- <dependency>
   			<artifactId>spring-boot-starter-social-facebook</artifactId>
   			<groupId>spring-boot-starter-social-facebook</groupId>
   			<version>1.5.9.RELEASE</version>
		</dependency> -->
		<!-- 安全策略结束 -->
		
		<!-- Actuator 安全监控 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Actuator 安全监控 -->
		
		<!--admin的服务 -->
		<!-- <dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server</artifactId>
			<version>1.5.7</version>
		</dependency> -->
		
		<!--admin的ui依赖 -->
		<!-- <dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server-ui</artifactId>
			<version>1.5.7</version>
		</dependency> -->
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
		</dependency>
		
		
	</dependencies>
	
	<dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR4 </version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<build>
		<finalName>田国瑞的帝国时代</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>static/fonts/**</exclude>
					<exclude>static/assets/font-awesome/fonts/**</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>static/fonts/**</include>
					<include>static/assets/font-awesome/fonts/**</include>
				</includes>
			</resource>
		</resources>
	
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!--添加QueryDSL插件支持-->
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
           	<!-- 插件列表内的第一个插件是SpringBoot为我们自动自动添加的，
           	是SpringBoot相关maven的依赖插件。而下面的插件就是我们添加的相关QueryDSL的插件，
           	该插件会自动扫描项目内配置了@Entity的实体类，
           	并根据实体的内定义的字段以及关联类通过JPAAnnotationProcessor自动创建Q[实体类名称]的查询实体，
           	创建完成后会将实体存放到我们配置outputDirectory属性目录下。 -->
			<!--添加QueryDSL插件支持-->
		</plugins>
	</build>


</project>
